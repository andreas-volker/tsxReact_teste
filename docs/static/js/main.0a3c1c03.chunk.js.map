{"version":3,"sources":["contexts/stored.tsx","pages/Login.tsx","pages/HomeContent.tsx","pages/HomeSidebar.tsx","pages/Home.tsx","App.tsx","Wrapper.tsx","serviceWorker.ts","index.tsx"],"names":["AppContext","React","createContext","state","authed","JSON","parse","localStorage","lang","index","option","theme","Login","props","localeData","require","locale","useState","username","setUsername","password","setPassword","context","useContext","className","action","header","type","placeholder","user","value","onChange","e","currentTarget","onClick","preventDefault","update","alert","button","HomeContent","json","stringify","id","subMenuItems","name","owner","subject","users","itens","setItens","checked","setChecked","archive","setArchive","letterToRGB","iniciais","first","toLowerCase","charCodeAt","last","distance","Math","abs","red","green","blue","color","background","selectItem","el","dataset","list","indexOf","push","splice","useEffect","menuId","xhr","XMLHttpRequest","open","onreadystatechange","this","readyState","data","status","responseText","send","search","forEach","item","assign","schedule","length","map","key","style","data-id","d","nome","today","hours","HomeSidebar","history","useHistory","settings","setSettings","selected","setSelected","subMenus","contas","setContas","openSettings","contextOption","select","dir","limit","setLang","setTheme","selecionar","toString","parseInt","abrir","querySelector","setId","innerHTML","new_button","favorites","item2","language","data-dir","removeItem","logout","Home","wrapper","useRef","sidebar","styleSidebar","setStyleSidebar","styleContent","setStyleContent","isDragging","setDrag","setMenuId","setNome","on","move","styleWidth","current","width","offset","offsetLeft","xPos","clientX","minWidth","offsetWidth","max","clientWidth","down","test","up","ref","onMouseLeave","onMouseDown","onMouseUp","onMouseMove","txt","App","log","LoginWrap","Consumer","HomeWrap","path","to","exact","Wrapper","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a3c1c03.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\r\n\r\nexport interface Select {\r\n    index: number;\r\n    option: string[];\r\n}\r\n\r\ninterface State {\r\n    authed: boolean;\r\n    lang: Select;\r\n    theme: Select;\r\n}\r\ninterface Stored {\r\n    state: State;\r\n    update?: Dispatch<SetStateAction<Stored>>;\r\n}\r\nconst AppContext = React.createContext<Stored>({\r\n    state: {\r\n        authed: JSON.parse(localStorage.authed || 'false') || false,\r\n        lang: {\r\n            index: JSON.parse(localStorage.lang || '0') || 0,\r\n            option: ['pt-br', 'en-us'],\r\n        },\r\n        theme: {\r\n            index: JSON.parse(localStorage.theme || '0') || 0,\r\n            option: ['light', 'dark'],\r\n        },\r\n    },\r\n});\r\nexport interface BasicProps {\r\n    theme: Select;\r\n    lang: Select;\r\n}\r\nexport default AppContext;\r\n","import React, { useState, useContext, MouseEvent } from 'react';\r\nimport AppContext, { BasicProps } from 'contexts/stored';\r\nimport './Login.css';\r\n\r\nconst Login: React.FC<BasicProps> = (props) => {\r\n    const localeData = require('./Login.json'),\r\n        theme = props.theme.option[props.theme.index] || props.theme.option[0],\r\n        lang = props.lang.option[props.lang.index] || props.lang.option[0],\r\n        locale = localeData[lang],\r\n        [username, setUsername] = useState(''),\r\n        [password, setPassword] = useState(''),\r\n        context = useContext(AppContext) || {},\r\n        click = (e: MouseEvent) => {\r\n            e.preventDefault();\r\n            if (username !== 'admin' || password !== 'admin') {\r\n                alert('admin\\nadmin');\r\n                return;\r\n            } else if (context.update) {\r\n                context.state.authed = true;\r\n                localStorage.authed = true;\r\n                context.update(context);\r\n            }\r\n        };\r\n    return (\r\n        <div className={`login ${theme}`}>\r\n            <div>\r\n                <form action=\"\">\r\n                    <p>{locale.header}</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder={locale.user}\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.currentTarget.value)}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder={locale.password}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.currentTarget.value)}\r\n                    />\r\n                    <button onClick={click}>\r\n                        <span>{locale.button}</span>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;\r\n","import React, { useEffect, useState, MouseEvent, FormEvent } from 'react';\r\nimport { BasicProps } from 'contexts/stored';\r\nimport './HomeContent.css';\r\n\r\ninterface SubMenuItem {\r\n    id: string;\r\n    name: string;\r\n    owner: string;\r\n    subject: string;\r\n    users: string[];\r\n}\r\n\r\ninterface Item {\r\n    id: number;\r\n    subMenuItems: SubMenuItem[];\r\n}\r\n\r\ninterface Content extends BasicProps {\r\n    menuId: number;\r\n    nome: string;\r\n}\r\n\r\nconst HomeContent: React.FC<Content> = (props) => {\r\n    const json = JSON.stringify({\r\n            id: 0,\r\n            subMenuItems: [\r\n                {\r\n                    id: '',\r\n                    name: '',\r\n                    owner: '',\r\n                    subject: '',\r\n                    users: [''],\r\n                },\r\n            ],\r\n        }),\r\n        localeData = require('./HomeContent.json'),\r\n        theme = props.theme.option[props.theme.index] || props.theme.option[0],\r\n        lang = props.lang.option[props.lang.index] || props.lang.option[0],\r\n        locale = localeData[lang],\r\n        [itens, setItens] = useState<Item>(JSON.parse(localStorage.itens || json)),\r\n        [checked, setChecked] = useState<string[]>(JSON.parse(localStorage.checked || '[]')),\r\n        [archive, setArchive] = useState<string[]>(JSON.parse(localStorage.archive || '[]')),\r\n        letterToRGB = (iniciais: string) => {\r\n            iniciais = iniciais.toLowerCase();\r\n            let first = iniciais.charCodeAt(0),\r\n                last = iniciais.charCodeAt(1),\r\n                distance = Math.abs(first - last),\r\n                red = distance > 12 ? distance * 10 : 255 / (distance + 1),\r\n                green = distance > 12 ? distance * 1 : distance * 20,\r\n                blue = distance > 12 ? distance * 10 : distance * 2,\r\n                intensity = red * 0.299 + green * 0.587 + blue * 0.114;\r\n            return { color: intensity > 186 ? '#000' : '#fff', background: `rgb(${red}, ${green}, ${blue})` };\r\n        },\r\n        selectAll = (e: FormEvent) => {\r\n            let list: string[] = [];\r\n            if ((e.currentTarget as HTMLInputElement).checked) {\r\n                list = [...checked];\r\n                itens.subMenuItems.forEach((item: SubMenuItem) => {\r\n                    if (list.indexOf(item.id) < 0) {\r\n                        list.push(item.id);\r\n                    }\r\n                });\r\n            }\r\n            setChecked(list);\r\n            localStorage.checked = JSON.stringify(list);\r\n        },\r\n        selectItem = (e: FormEvent) => {\r\n            let el: HTMLElement | null = e.currentTarget as HTMLElement,\r\n                id = el?.dataset.id || '',\r\n                list = [...checked];\r\n            if (!id) return;\r\n            let index = list.indexOf(id);\r\n            if (index < 0) list.push(id);\r\n            else list.splice(index, 1);\r\n            setChecked(list);\r\n            localStorage.checked = JSON.stringify(list);\r\n        },\r\n        arquivar = (e: MouseEvent) => {\r\n            const list = [...archive, ...checked];\r\n            setArchive(list);\r\n            setChecked([]);\r\n            localStorage.archive = JSON.stringify(list);\r\n            localStorage.checked = '[]';\r\n        };\r\n    useEffect(() => {\r\n        if (!props.menuId || props.menuId === itens.id) return;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\r\n            'GET',\r\n            `http://my-json-server.typicode.com/EnkiGroup/DesafioReactEncontact/items/${props.menuId}`,\r\n            true,\r\n        );\r\n        xhr.onreadystatechange = function () {\r\n            if (this.readyState === 4) {\r\n                let data = {};\r\n                if (this.status >= 200 && this.status < 400) {\r\n                    try {\r\n                        data = JSON.parse(this.responseText);\r\n                    } catch (e) {}\r\n                }\r\n                setItens(data as Item);\r\n                localStorage.itens = JSON.stringify(data);\r\n            }\r\n        };\r\n        xhr.send();\r\n    }, [props, itens.id]);\r\n    return (\r\n        <div className={`home-content ${theme}`}>\r\n            <div className=\"header\">\r\n                <div className=\"search\">\r\n                    <input type=\"text\" placeholder={locale.search} />\r\n                </div>\r\n                <div className=\"botoes\">\r\n                    <input type=\"checkbox\" onChange={selectAll} />\r\n                    <button>{locale.assign}</button>\r\n                    <button onClick={arquivar}>{locale.archive}</button>\r\n                    <button>{locale.schedule}</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"itens\">\r\n                <ul className={checked.length ? 'checking' : ''}>\r\n                    {itens.subMenuItems.map((item: SubMenuItem) => {\r\n                        if (!item.id || archive.indexOf(item.id) >= 0) return null;\r\n                        return (\r\n                            <li key={item.id}>\r\n                                <div className={'checkbox ' + (!checked.length ? 'owner' : 'check')}>\r\n                                    <div style={letterToRGB(item.owner || 'az')}>\r\n                                        <span>{item.owner}</span>\r\n                                        <input\r\n                                            data-id={item.id}\r\n                                            checked={checked.indexOf(item.id) >= 0}\r\n                                            onChange={selectItem}\r\n                                            type=\"checkbox\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"msg\">\r\n                                    <span>{item.name}</span>\r\n                                    <span>{item.subject}</span>\r\n                                    <span className=\"inbox\">\r\n                                        <span className=\"zap\">\r\n                                            <svg>\r\n                                                <path\r\n                                                    d=\"M30.667,14.939c0,8.25-6.74,14.938-15.056,14.938c-2.639,0-5.118-0.675-7.276-1.857L0,30.667l2.717-8.017\r\n                                                    c-1.37-2.25-2.159-4.892-2.159-7.712C0.559,6.688,7.297,0,15.613,0C23.928,0.002,30.667,6.689,30.667,14.939z M15.61,2.382\r\n                                                    c-6.979,0-12.656,5.634-12.656,12.56c0,2.748,0.896,5.292,2.411,7.362l-1.58,4.663l4.862-1.545c2,1.312,4.393,2.076,6.963,2.076\r\n                                                    c6.979,0,12.658-5.633,12.658-12.559C28.27,8.016,22.59,2.382,15.61,2.382z M23.214,18.38c-0.094-0.151-0.34-0.243-0.708-0.427\r\n                                                    c-0.367-0.184-2.184-1.069-2.521-1.189c-0.34-0.123-0.586-0.185-0.832,0.182c-0.243,0.367-0.951,1.191-1.168,1.437\r\n                                                    c-0.215,0.245-0.43,0.276-0.799,0.095c-0.369-0.186-1.559-0.57-2.969-1.817c-1.097-0.972-1.838-2.169-2.052-2.536\r\n                                                    c-0.217-0.366-0.022-0.564,0.161-0.746c0.165-0.165,0.369-0.428,0.554-0.643c0.185-0.213,0.246-0.364,0.369-0.609\r\n                                                    c0.121-0.245,0.06-0.458-0.031-0.643c-0.092-0.184-0.829-1.984-1.138-2.717c-0.307-0.732-0.614-0.611-0.83-0.611\r\n                                                    c-0.215,0-0.461-0.03-0.707-0.03S9.897,8.215,9.56,8.582s-1.291,1.252-1.291,3.054c0,1.804,1.321,3.543,1.506,3.787\r\n                                                    c0.186,0.243,2.554,4.062,6.305,5.528c3.753,1.465,3.753,0.976,4.429,0.914c0.678-0.062,2.184-0.885,2.49-1.739\r\n                                                    C23.307,19.268,23.307,18.533,23.214,18.38z\"\r\n                                                />\r\n                                            </svg>\r\n                                        </span>\r\n                                        {props.nome}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"detail\">\r\n                                    <span>{locale.today}, 11h42</span>\r\n                                    <span>2 {locale.hours}</span>\r\n                                    <div className=\"users-list\">\r\n                                        {item.users.map((user, index) => {\r\n                                            return (\r\n                                                <div key={index} style={letterToRGB(user || 'az')} className=\"users\">\r\n                                                    <span>{user}</span>\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default HomeContent;\r\n","import React, { useEffect, useState, useContext, MouseEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AppContext from 'contexts/stored';\r\nimport { BasicProps, Select } from 'contexts/stored';\r\nimport './HomeSidebar.css';\r\n\r\ninterface Menu {\r\n    id: number;\r\n    name: string;\r\n    subMenus: Menu[];\r\n}\r\n\r\ninterface Sidebar extends BasicProps {\r\n    setId: (id: number, nome: string) => void;\r\n    menuId: number;\r\n}\r\n\r\nconst HomeSidebar: React.FC<Sidebar> = (props) => {\r\n    const localeData = require('./HomeSidebar.json'),\r\n        theme = props.theme.option[props.theme.index] || props.theme.option[0],\r\n        lang = props.lang.option[props.lang.index] || props.lang.option[0],\r\n        locale = localeData[lang],\r\n        context = useContext(AppContext) || {},\r\n        history = useHistory(),\r\n        [settings, setSettings] = useState(JSON.parse(localStorage.settings || 'false')),\r\n        [selected, setSelected] = useState(JSON.parse(localStorage.selected || 'false')),\r\n        [contas, setContas] = useState<Menu[]>([\r\n            {\r\n                id: 0,\r\n                name: '',\r\n                subMenus: [],\r\n            },\r\n        ]),\r\n        openSettings = () => {\r\n            setSettings(!settings);\r\n            localStorage.settings = !settings;\r\n        },\r\n        contextOption = (e: MouseEvent, select: Select, nome: string) => {\r\n            let el: HTMLElement | null = e.currentTarget as HTMLElement,\r\n                dir = el?.dataset.dir || 'right';\r\n            if (!context.update) return;\r\n            let limit = select.option.length;\r\n            if (dir === 'right') {\r\n                select.index++;\r\n            } else {\r\n                select.index--;\r\n            }\r\n            if (select.index >= limit) select.index = 0;\r\n            else if (select.index < 0) select.index = limit - 1;\r\n            if (nome === 'lang') context.state.lang = select;\r\n            else if (nome === 'theme') context.state.theme = select;\r\n            context.update(context);\r\n        },\r\n        setLang = (e: MouseEvent) => {\r\n            contextOption(e, context.state.lang, 'lang');\r\n            localStorage.lang = context.state.lang.index;\r\n        },\r\n        setTheme = (e: MouseEvent) => {\r\n            contextOption(e, context.state.theme, 'theme');\r\n            localStorage.theme = context.state.theme.index;\r\n        },\r\n        logout = () => {\r\n            if (context.update) {\r\n                localStorage.removeItem('authed');\r\n                localStorage.removeItem('settings');\r\n                localStorage.removeItem('menuId');\r\n                localStorage.removeItem('selected');\r\n                localStorage.removeItem('itens');\r\n                localStorage.removeItem('nome');\r\n                localStorage.removeItem('checked');\r\n                localStorage.removeItem('archive');\r\n                context.state.authed = false;\r\n                context.update(context);\r\n                history.push('/login');\r\n            }\r\n        },\r\n        selecionar = (e: MouseEvent) => {\r\n            let el: HTMLElement | null = e.currentTarget as HTMLElement,\r\n                id = el?.dataset.id || '-1';\r\n            if (id === selected.toString()) id = '-1';\r\n            localStorage.selected = id;\r\n            setSelected(parseInt(id, 10));\r\n        },\r\n        abrir = (e: MouseEvent) => {\r\n            let el: HTMLElement | null = e.currentTarget as HTMLElement,\r\n                id = el?.dataset.id || '-1';\r\n            el = (e.currentTarget as HTMLElement).querySelector('span');\r\n            props.setId(parseInt(id, 10), el?.innerHTML + '');\r\n        };\r\n    useEffect(() => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', 'http://my-json-server.typicode.com/EnkiGroup/DesafioReactEncontact/menus', true);\r\n        xhr.onreadystatechange = function () {\r\n            if (this.readyState === 4) {\r\n                let data = [];\r\n                if (this.status >= 200 && this.status < 400) {\r\n                    try {\r\n                        data = JSON.parse(this.responseText);\r\n                    } catch (e) {}\r\n                }\r\n                setContas(data);\r\n            }\r\n        };\r\n        xhr.send();\r\n    }, []);\r\n    return (\r\n        <div className={`home-sidebar ${theme}`}>\r\n            <div className=\"header\">\r\n                <div className=\"top\">\r\n                    <div className=\"userMenu\" onClick={openSettings}>\r\n                        <span>OA</span>\r\n                    </div>\r\n                    <button>{locale.new_button}</button>\r\n                </div>\r\n                <div className=\"fav\">\r\n                    {locale.favorites} &#10247;\r\n                    <span>30</span>\r\n                </div>\r\n            </div>\r\n            <ul className=\"contas\">\r\n                {contas.map((item: Menu) => {\r\n                    return (\r\n                        <li key={item.id} className={item.id === selected ? 'selected' : ''}>\r\n                            <div data-id={item.id} onClick={selecionar}>\r\n                                <div className=\"icon\">&#128898;</div>\r\n                                <span className=\"name\">{item.name}</span>\r\n                                <div className=\"number\">20</div>\r\n                            </div>\r\n                            {item.id !== selected ? null : (\r\n                                <ul className=\"inbox\">\r\n                                    {item.subMenus.map((item2) => {\r\n                                        return (\r\n                                            <li\r\n                                                key={item2.id}\r\n                                                className={`sub ${props.menuId === item2.id ? 'opened' : ''}`}\r\n                                                data-id={item2.id}\r\n                                                onClick={abrir}\r\n                                            >\r\n                                                <span>{item2.name}</span>\r\n                                                <div className=\"number\">15</div>\r\n                                            </li>\r\n                                        );\r\n                                    })}\r\n                                </ul>\r\n                            )}\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            {settings ? (\r\n                <div className=\"menu\">\r\n                    <span className=\"close\" onClick={openSettings}>\r\n                        &times;\r\n                    </span>\r\n                    <ul>\r\n                        <li>\r\n                            {locale.language}\r\n                            <span data-dir=\"left\" onClick={setLang}>\r\n                                &lt;\r\n                            </span>\r\n                            {context.state.lang.option[context.state.lang.index]}\r\n                            <span data-dir=\"right\" onClick={setLang}>\r\n                                &gt;\r\n                            </span>\r\n                        </li>\r\n                        <li>\r\n                            {locale.theme}\r\n                            <span data-dir=\"left\" onClick={setTheme}>\r\n                                &lt;\r\n                            </span>\r\n                            {locale[context.state.theme.option[context.state.theme.index]]}\r\n                            <span data-dir=\"right\" onClick={setTheme}>\r\n                                &gt;\r\n                            </span>\r\n                        </li>\r\n                        <li onClick={logout}>\r\n                            <span>{locale.logout}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\nexport default HomeSidebar;\r\n","import React, { useRef, useState, MutableRefObject, CSSProperties, MouseEvent } from 'react';\r\nimport { BasicProps } from 'contexts/stored';\r\nimport HomeContent from './HomeContent';\r\nimport HomeSidebar from './HomeSidebar';\r\nimport './Home.css';\r\n\r\nconst Home: React.FC<BasicProps> = (props) => {\r\n    const theme = props.theme.option[props.theme.index] || props.theme.option[0],\r\n        wrapper = useRef() as MutableRefObject<HTMLDivElement>,\r\n        sidebar = useRef() as MutableRefObject<HTMLDivElement>,\r\n        [styleSidebar, setStyleSidebar] = useState<CSSProperties>(\r\n            localStorage.styleSidebar ? JSON.parse(localStorage.styleSidebar) : {},\r\n        ),\r\n        [styleContent, setStyleContent] = useState<CSSProperties>(\r\n            localStorage.styleContent ? JSON.parse(localStorage.styleContent) : {},\r\n        ),\r\n        [isDragging, setDrag] = useState(false),\r\n        [menuId, setMenuId] = useState(JSON.parse(localStorage.menuId || '0')),\r\n        [nome, setNome] = useState(localStorage.nome),\r\n        setId = (id: number, txt: string) => {\r\n            if (id) setMenuId(id);\r\n            if (txt) setNome(txt);\r\n            localStorage.menuId = id;\r\n            localStorage.nome = txt;\r\n        },\r\n        on = {\r\n            move: (e: MouseEvent) => {\r\n                if (!isDragging) return false;\r\n                const styleWidth = sidebar.current.style.width;\r\n                sidebar.current.style.width = '';\r\n                const offset = wrapper.current.offsetLeft,\r\n                    xPos = e.clientX - offset,\r\n                    minWidth = sidebar.current.offsetWidth / 2,\r\n                    width = Math.max(minWidth, xPos + 4);\r\n                sidebar.current.style.width = styleWidth;\r\n                setStyleSidebar({\r\n                    width: width + 'px',\r\n                });\r\n                localStorage.styleSidebar = JSON.stringify(styleSidebar);\r\n                setStyleContent({\r\n                    width: `${wrapper.current.clientWidth - width}px`,\r\n                });\r\n                localStorage.styleContent = JSON.stringify(styleContent);\r\n            },\r\n            down: (e: MouseEvent) => {\r\n                if (/slider/.test((e.currentTarget as HTMLElement).className)) setDrag(true);\r\n            },\r\n            up: (e: MouseEvent) => {\r\n                setDrag(false);\r\n            },\r\n        };\r\n    return (\r\n        <div\r\n            className={`home ${theme}`}\r\n            ref={wrapper}\r\n            onMouseLeave={on.up}\r\n            onMouseDown={on.down}\r\n            onMouseUp={on.up}\r\n            onMouseMove={on.move}\r\n        >\r\n            <div ref={sidebar} style={styleSidebar} className=\"sidebar\">\r\n                <HomeSidebar menuId={menuId} setId={setId} theme={props.theme} lang={props.lang} />\r\n            </div>\r\n            <div className=\"slider\"></div>\r\n            <div style={styleContent} className=\"content\">\r\n                <HomeContent nome={nome} menuId={menuId} theme={props.theme} lang={props.lang} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;\r\n","import React, { useContext } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport AppContext from 'contexts/stored';\r\nimport Login from 'pages/Login';\r\nimport Home from 'pages/Home';\r\n\r\nconst App: React.FC<any> = (props) => {\r\n    const context = useContext(AppContext) || {},\r\n        log = !context.state.authed;\r\n    function LoginWrap() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {(context) => {\r\n                    const state = context.state;\r\n                    return <Login theme={state.theme} lang={state.lang} />;\r\n                }}\r\n            </AppContext.Consumer>\r\n        );\r\n    }\r\n    function HomeWrap() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {(context) => {\r\n                    const state = context.state;\r\n                    return <Home theme={state.theme} lang={state.lang} />;\r\n                }}\r\n            </AppContext.Consumer>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Switch>\r\n                    {log ? (\r\n                        <Route path=\"/login\">\r\n                            <LoginWrap></LoginWrap>\r\n                        </Route>\r\n                    ) : null}\r\n                    {log ? <Redirect to=\"/login\" /> : null}\r\n                    <Route exact path=\"/\">\r\n                        <HomeWrap></HomeWrap>\r\n                    </Route>\r\n                    <Route path=\"*\">\r\n                        <Redirect to=\"/\" />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\nexport default App;\r\n","import React, { useState, useContext } from 'react';\r\nimport App from 'App';\r\nimport AppContext from 'contexts/stored';\r\n\r\nconst Wrapper: React.FC<any> = () => {\r\n    const [context, update] = useState(useContext(AppContext)),\r\n        value = { state: context.state, update: update };\r\n    return (\r\n        <AppContext.Provider value={value}>\r\n            <App />\r\n        </AppContext.Provider>\r\n    );\r\n};\r\nexport default Wrapper;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'index.css';\r\nimport Wrapper from 'Wrapper';\r\nimport * as serviceWorker from 'serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Wrapper />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}